#!/bin/bash
set -e

function run_mussel(){
  mussel.sh $* ${mussel_opts}
}

function lsinst() {
  # state=(running|stopped|terminated|alive)
  local state=${1:-running}
  run_mussel ${namespace} index --state=${state} | grep :id: | awk '{print $3}'
}

function current_inst_num(){
  lsinst running | wc -l
}

function is_max_inst(){
  cur=$(current_inst_num)
  echo -n "c:${cur}=${max_inst}? " >&2
  #[[ ${max_inst} = ${cur} ]]
  [[ ${max_inst} -le ${cur} ]]
}

function is_zero_inst(){
  cur=$(current_inst_num)
  echo -n "c:${cur}=0? " >&2
  [[ 0 = ${cur} ]]
}

function retry_until() {
  local wait_sec=$1
  local func=$2

  local tries=0
  local start_at=$(date +%s)

  while :; do
    ${func} && {
      break
    } || {
      sleep 3
    }

    let ++tries
    if [[ $(($(date +%s) - ${start_at})) -gt ${wait_sec} ]]; then
      echo "Retry Failure: Exceed ${wait_sec} sec: Retried ${tries} times" >&2
      return 1
    fi
  done
}

function retry_until_max_inst(){
  retry_until ${retry_wait_sec} is_max_inst
}

function retry_until_zero_inst(){
  retry_until ${retry_wait_sec} is_zero_inst
}

function destroy_all(){
  do_command_all destroy alive
  sleep 3
  retry_until_zero_inst
  sleep 3
}

function do_command_all() {
  local command=$1 state=$2
  for inst_id in $(lsinst ${state}); do
    run_mussel ${namespace} ${command} ${inst_id}
  done
}

function create_all(){
  for i in {1..2}; do
    for inst_spec_name in ${instance_spec_names}; do
      echo ${inst_spec_name}
      create ${inst_spec_name}
    done
  done
  retry_until_max_inst
  sleep 3
}

function create() {
  local instance_spec_name=$1

  run_mussel ${namespace} create \
   --image-id=${image_id} \
   --instance-spec-name=${instance_spec_name} \
   --security-groups=${security_groups} \
   --ssh-key-id=${ssh_key_id} \
   --hypervisor=${hypervisor} \
   --cpu-cores=${cpu_cores} \
   --memory-size=${memory_size}
}

function reboot_all(){
  do_command_all reboot running
  sleep 6
  retry_until_max_inst
  sleep 3
}

abs_dirname=$(cd $(dirname $0)/../ && pwd)
function_dir=${abs_dirname}/functions
config_dir=${KEMUMAKI_CONFIG_DIR:-${abs_dirname}/config}
. ${function_dir}/util.sh
load_config
set_debug

namespace=instance
image_id=wmi-centos1d
instance_spec_name="vz.small"
instance_spec_names="vz.small vz.large"
security_groups=sg-aa9j5kqk
ssh_key_id=ssh-demo
hypervisor=openvz
cpu_cores=1
memory_size=1024

inst_states="
 running stopped terminated alive
"
dcmgr_host=${DCMGR_HOST:-${dcmgr_host:-10.0.2.15}}
dcmgr_port=${DCMGR_PORT:-${dcmgr_port:-9001}}
mussel_opts="--host=${dcmgr_host} --port=${dcmgr_port}"
max_inst=4
retry_wait_sec=$((60 * 30))

destroy_all
create_all
reboot_all
